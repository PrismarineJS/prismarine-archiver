name: CI

# Controls when the workflow will run
on:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '*/10 * * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      - name: Setup nushell
        uses: hustcer/setup-nu@main
        with:
          version: '*'
      - name: Write SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.GITLAB_PRIV_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H gitlab.com > ~/.ssh/known_hosts
          ssh-keyscan -H codeberg.org >> ~/.ssh/known_hosts
          git config --global user.email "prismarine-archive@u9g.dev"
          git config --global user.name "prismarine-archive"
      - name: Run commands
        shell: nu {0}
        run: |
          pip install git+https://github.com/U9G/python-github-backup.git#egg=github-backup
          git clone git@gitlab.com:PrismarineJS/prismarine-archive.git
          cd prismarine-archive
          def run [] {
            if ((pwd | str trim | split row / | last) == prismarine-archive) {
                echo "renaming .git1 folders to .git"
                ls -a **/* | where type == dir and name ends-with ".git1" | each { |e| mv $e.name ($e.name | str replace '(.*)\.git1' '$1.git')  }
                echo "running github-backup"
                github-backup -t $env.GH_API_KEY --as-app -o . --pull-details --gists --starred-gists -i --exclude prismarine-web-client --all PrismarineJS
                echo "renaming .git folders to .git1"
                ls -a **/* | where type == dir and name ends-with ".git" | each { |e| mv $e.name ($e.name | str replace '(.*)\.git' '$1.git1')  }
                echo "moving the main .git back from .git1"
                mv .git1 .git
                echo "running git add ."
                git add .
                echo "running git commit"
                git commit -m $"Update at (date now | into string)"
                echo "running git push"
                git push
                git remote add codeberg git@codeberg.org:u9g/prismarine-archive.git
                git push -u codeberg main
            } else { echo "not in prismarinebackup folder" }
          }
          run
        env: # Or as an environment variable
          GH_API_KEY: ${{ secrets.GH_API_KEY }}
